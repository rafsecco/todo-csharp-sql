name: Deploy Application

on:
  workflow_run:
    workflows: ["Build Project"]
    types:
      - completed

env:
  DOCKER_IMAGE_REGISTRY: "${{ vars.DOCKER_CONTAINER_REGISTRY }}/${{ vars.DOCKERHUB_REPOSITORY}}:"

jobs:

  versionamento:
    runs-on: ubuntu-latest
    outputs:
      versao: ${{ steps.versionamento.outputs.versao }}
      docker-container-registry: ${{ steps.docker-image-registry.outputs.docker-container-registry }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: versao
          path: ./
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Get version from file
        id: get-version
        run: |
          VALUE=$(cat ./versao.txt)
          echo "::notice:: $VALUE"
          echo "versao=$VALUE" >> "$GITHUB_OUTPUT"

          - name: Generate docker image registry
          id: docker-image-registry
          run: |
          echo "docker-container-registry=${{ vars.DOCKER_CONTAINER_REGISTRY }}/${{ vars.DOCKERHUB_REPOSITORY }}:${{ steps.get-version.outputs.versao }}" >> "$GITHUB_OUTPUT"

  deploy-to-google-cloud:
    name: Deploy to google Cloud
    needs: versionamento
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      id-token: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ vars.GCP_PROJECT_ID }}

      - uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          service: ${{ vars.GCP_RUN_SERVICE }}
          image: ${{ needs.versionamento.outputs.docker-container-registry }}
          region: ${{ vars.GCP_RUN_REGION }}


